OUTPUT ONLY WHAT IS SPECIFIED. No markdown, no explanations, no formatting extras. Tags and content must be flush-left, one per line.

If you are a model with limited instruction-following (e.g. Llama 3.2), just follow the Output Example exactly.

---

IMPORTANT: Strict Formatting Rules

- Use ONLY these tags: <TITLE_BLOCK>, </TITLE_BLOCK>, <TITLE_OVERVIEW>.
- DO NOT use any other tags, HTML, markdown, code blocks, or explanations.
- Each entry: N. FULL_TITLE | SHORT_TITLE
  - N: Entry number (sequential, starting at the requested number, e.g., 1., 2., ...).
  - FULL_TITLE: Clear and descriptive, tailored to {{EXPERTISE_LEVEL}} for {{TOPIC}}.
  - SHORT_TITLE: ≤5 words, concise summary.
- Entries must be flush-left, no indentation or extra characters.
- NO bullet points, NO bold/italic, NO extra commentary.
- If you cannot fit all requested entries, stop at the last complete entry within your limit.
- Do NOT summarize or explain anything outside the blocks.
- Do NOT wrap any tags or output in code blocks, quotes, or backticks. Tags must always be flush-left.

Topic: {{TOPIC}}  
Category: {{CATEGORY}}  
Expertise Level: {{EXPERTISE_LEVEL}}  
{{CONTEXT_NOTE}}

You are an engineer with {{EXPERTISE_LEVEL}} expertise.  
Generate exactly {{QUANTITY}} unique, non-repeating chapters related to "{{TOPIC}}", enclosed within <TITLE_BLOCK> and </TITLE_BLOCK> tags, both flush-left on their own lines.  
Do not omit the closing tag </TITLE_BLOCK_END> — it is mandatory.  
Do not generate more than {{QUANTITY}} entries under any circumstance. This is a hard limit and must be respected at all costs. Output must match {{QUANTITY}} exactly—any deviation is invalid and must be regenerated.

<!-- Audience-based response guidelines for {{TOPIC}}:
- NOVICE: 
  * Focus on basic {{TOPIC}} concepts and their practical applications
  * Explain {{CHAPTER_TITLE}} using simple, topic-specific examples
  * Break down {{TOPIC}} concepts into fundamental building blocks
  * Show how {{CHAPTER_TITLE}} fits into the broader {{TOPIC}} ecosystem

- INTERMEDIATE:
  * Build upon basic {{TOPIC}} knowledge
  * Show how {{CHAPTER_TITLE}} connects with other {{TOPIC}} concepts
  * Include practical {{TOPIC}}-specific examples and use cases
  * Explain the "why" behind {{TOPIC}} best practices

- ADVANCED:
  * Focus on {{TOPIC}} optimization and best practices
  * Discuss {{TOPIC}}-specific edge cases and complex scenarios
  * Include {{TOPIC}} performance considerations and trade-offs
  * Show advanced {{TOPIC}} patterns and techniques

- EXPERT:
  * Dive deep into {{TOPIC}} implementation details
  * Focus on cutting-edge {{TOPIC}} approaches
  * Discuss complex {{TOPIC}} system interactions
  * Cover {{TOPIC}} performance implications and scalability
-->


---

Formatting Instructions:

- For each entry, output: N. FULL_TITLE | SHORT_TITLE
    - N: Entry number (sequential, starting at the requested number for this batch, e.g., 1., 2., ...).
    - FULL_TITLE: Clear, descriptive, and relevant for the specified expertise level.
    - SHORT_TITLE: ≤ 5 words, concise summary.
- Every entry must have a SHORT_TITLE after the pipe ("|") character. Do NOT omit SHORT_TITLE in any entry.
- Enclose all entries in a single block:
- You MUST include both <TITLE_BLOCK> and </TITLE_BLOCK> tags. The closing tag is mandatory and must appear flush-left on its own line after the final entry.
- If you omit </TITLE_BLOCK_END>, your output is invalid and must be regenerated.

<TITLE_BLOCK>
[each entry here, one per line]
</TITLE_BLOCK>

- No additional text, explanations, transitional phrases, or extra commentary before, between, or after entries.
- Do not reference prior or future entries, use terms like "continued" or "next set," or duplicate any entry.
- The block must contain exactly {{QUANTITY}} lines (entries).
    - If {{QUANTITY}} is 1, output only one entry.
    - No repeated entries.
- For large lists, you must support generating output in batches. Each batch must use sequential numbering that continues from the previous batch.

---

If you are a model like DeepSeek:
- You must not generate more than {{QUANTITY}} entries. This is a strict cap.
- You must not repeat entries or invent formatting.
- All tags must appear exactly as shown, with no additional symbols, wrapping, or commentary.
- Output is invalid if it contains extra lines, missing tags, or deviates in any way from the structure shown below.
- Think carefully before outputting—verify that entry count and tags are correct before finalizing your response.

---

ABSOLUTE ENTRY COUNT CHECK (STRICT):
- If you produce more or fewer than {{QUANTITY}} entries, your output is invalid and must be discarded.
- You must validate that the number of lines inside <TITLE_BLOCK>...</TITLE_BLOCK> is exactly {{QUANTITY}} before finishing.
- Overproduction will be interpreted as a failure to follow instructions. Do not try to be helpful by adding more.

Overview Generation:

- After the title block, output an overview:
<TITLE_OVERVIEW>
[One paragraph ONLY.]
</TITLE_OVERVIEW>
- The overview must:
    - Synthesize the shared purpose, relevance, and themes of the complete set of entries.
    - Describe the collection as a whole—do not summarize, list, mention, or rephrase any individual entry or its content.
    - Explain the value of the collection for the intended audience, including how the variety, scope, and selection support their goals for {{TOPIC}} at the {{EXPERTISE_LEVEL}} level.
    - Emphasize breadth, progression, and practical utility (e.g., foundational coverage, advanced mastery, applied skills—whatever is appropriate for the level/category).
    - Use clear, direct language without referencing the existence of the block, entries, or generation process itself.
    - Keep it strictly to one paragraph, flush-left, with no lists, bullet points, or extra commentary.

---

Validation Rules:

- Only one <TITLE_BLOCK> block and one <TITLE_OVERVIEW> block per output, both tags flush-left.
- No extra indentation, comments, or stray characters outside the required blocks.
- Output must strictly follow the formatting and content instructions.
- Tags must never be wrapped in code blocks, quotes, or backticks.
- Every entry must include the SHORT_TITLE after the pipe character.

---

Output Example (ALWAYS copy this format):

<TITLE_BLOCK>
1. Leveraging Python's Memory Management | Memory Optimization
2. Mastering Concurrency with asyncio | Asyncio Mastery
3. Implementing metaprogramming Patterns | Metaprogramming Tricks
4. Optimizing Code with Numpy Arrays | NumPy Efficiency
5. Advanced Exception Handling Techniques | Error Handling
6. Using Decorators for Code Reuse | Decorator Patterns
7. Exploiting C Extensions in Python | C Extensions
8. Utilizing Generators and Coroutines | Generator Tricks
9. Applying Custom Data Structures | Data Structure Hacks
10. Enhancing Performance with Cython | Cython Optimization
</TITLE_BLOCK>
<TITLE_OVERVIEW>
This collection provides expert-level Python techniques focusing on advanced topics like memory optimization, concurrency, and metaprogramming. Each entry offers insights into optimizing performance, leveraging libraries, and applying best practices for complex problem-solving in Python development.
</TITLE_OVERVIEW>