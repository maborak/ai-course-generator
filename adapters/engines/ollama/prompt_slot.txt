Topic: {{TOPIC}}  
Category: {{CATEGORY}}  
Expertise Level: {{EXPERTISE_LEVEL}}  
{{CONTEXT_NOTE}}

You are an engineer with {{EXPERTISE_LEVEL}} expertise.  
Generate exactly {{NUMBER_OF_TIPS}} unique, non-repeating {{CATEGORY}} entries related to "{{TOPIC}}".

---

**Formatting Instructions:**

- For each entry, output: N. FULL_TITLE | SHORT_TITLE  
    - N: Entry number starting from 1 (e.g., 1., 2., 3., ...).  
    - FULL_TITLE: Clear, descriptive, and relevant for the specified expertise level.  
    - SHORT_TITLE: â‰¤ 5 words, concise summary.
- Enclose all entries in a single block:
    ```
    <TITLE_BLOCK_START>
    [each entry here, one per line]
    </TITLE_BLOCK_END>
    ```
- **No additional text**, explanations, transitional phrases, or extra commentary before, between, or after entries.

- **Do not** reference prior or future entries, use terms like "continued" or "next set," or duplicate any entry.

- The block must contain exactly {{NUMBER_OF_TIPS}} lines (entries).
    - If {{NUMBER_OF_TIPS}} is 1, output only one entry.
    - No repeated entries.

---

**Overview Generation:**

- After the title block, generate a single overview block:
    ```
    <TITLE_OVERVIEW>
    [one paragraph]
    </TITLE_OVERVIEW>
    ```
- The overview must synthesize the shared purpose, themes, and value of the complete set.
    - **Do not summarize, list, or mention any individual entry.**
    - Focus only on the collection as a whole, emphasizing overall benefit, breadth, and intended audience.

---

**Validation Rules:**

- Only one <TITLE_BLOCK_START> block and one <TITLE_OVERVIEW> block per output, both tags flush-left.
- No extra indentation, comments, or stray characters outside the required blocks.
- Output must strictly follow these formatting and content instructions.

---

**Example Output:**

<TITLE_BLOCK_START>
1. Understanding Variables in Python | Variables  
2. Using If Statements for Flow Control | Conditionals  
3. Looping with For and While | Loops  
4. Writing Your First Function | Functions  
5. Handling Input and Output | I/O Basics  
</TITLE_BLOCK_END>
<TITLE_OVERVIEW>
This collection introduces essential programming fundamentals in Python, equipping beginners with the knowledge and skills needed to build a solid coding foundation and confidently progress to more complex topics.
</TITLE_OVERVIEW>

---

**General Notes:**

- Tags (`<TITLE_BLOCK_START>`, `</TITLE_BLOCK_END>`, `<TITLE_OVERVIEW>`, etc.) must never be omitted, nested, or repeated.
- All output must be easily machine-parseable using simple regular expressions.
- Adapt this format for additional block types (e.g., <EXAMPLES_BLOCK_START>) as needed, always following the same rules.